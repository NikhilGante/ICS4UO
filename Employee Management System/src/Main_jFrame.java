import java.awt.Dimension;
import java.io.*;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 685595
 */
public class Main_jFrame extends javax.swing.JFrame {
    
    // ATTRIBUTES
    public MyHashTable theHT;
    
    // UTIL
    static final Dimension TEXT_FIELD_DIMENSION = new Dimension (60, 28);
    static final String G_LOOK_AND_FEEL = "FlatLaf Light";
    // END OF UTIL
    
    // CONSTRUCTORS
    /**
     * Creates new form MainJFrame
     */
    public Main_jFrame() {
        initComponents();
        
        // Saves Emp info upon close
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent event) {
                saveEmps();
                dispose();
                System.exit(0);
            }
        });
        
        theHT = new MyHashTable(10);
        loadEmps();
        
    }
    
    
    // METHODS   
    
    public MyHashTable getTheHT() {
        return theHT;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        editEmpBtn = new javax.swing.JButton();
        displayEmpsBtn = new javax.swing.JButton();
        addEmpBtn = new javax.swing.JButton();
        saveEmpsBtn = new javax.swing.JButton();
        loadEmpsBtn = new javax.swing.JButton();
        removeEmpBtn = new javax.swing.JButton();
        getEmpInfoBtn = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        editEmpBtn.setText("Edit Employee");
        editEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editEmpBtnActionPerformed(evt);
            }
        });

        displayEmpsBtn.setText("Display All Employees");
        displayEmpsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayEmpsBtnActionPerformed(evt);
            }
        });

        addEmpBtn.setText("Add new employee");
        addEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pressed_addEmpBtn(evt);
            }
        });

        saveEmpsBtn.setText("Save all employees to file");
        saveEmpsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveEmpsBtnActionPerformed(evt);
            }
        });

        loadEmpsBtn.setText("Load all employees from file");
        loadEmpsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadEmpsBtnActionPerformed(evt);
            }
        });

        removeEmpBtn.setText("Remove Employee");
        removeEmpBtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                removeEmpBtnMouseClicked(evt);
            }
        });
        removeEmpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEmpBtnActionPerformed(evt);
            }
        });

        getEmpInfoBtn.setText("Get Employee Info");
        getEmpInfoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getEmpInfoBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(saveEmpsBtn)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(removeEmpBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(displayEmpsBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editEmpBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addEmpBtn, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(getEmpInfoBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 149, Short.MAX_VALUE)
                .addComponent(loadEmpsBtn))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(loadEmpsBtn)
                .addGap(21, 21, 21)
                .addComponent(editEmpBtn)
                .addGap(18, 18, 18)
                .addComponent(displayEmpsBtn)
                .addGap(18, 18, 18)
                .addComponent(addEmpBtn)
                .addGap(18, 18, 18)
                .addComponent(removeEmpBtn)
                .addGap(18, 18, 18)
                .addComponent(getEmpInfoBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(saveEmpsBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editEmpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editEmpBtnActionPerformed
        EditEmployeeInfo_jFrame theEEIFrame = new EditEmployeeInfo_jFrame();
        theEEIFrame.setVisible(true);
        theEEIFrame.setMainHT(theHT);
    }//GEN-LAST:event_editEmpBtnActionPerformed

    private void displayEmpsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayEmpsBtnActionPerformed
        // TODO add your handling code here:
        
        DisplayAllEmps_jFrame theNumItems_jFrame = new DisplayAllEmps_jFrame();
        theNumItems_jFrame.setVisible(true);
        theNumItems_jFrame.setMainHT(theHT);  // Have theSeparateJFrame mainHT point to the real HT.
    }//GEN-LAST:event_displayEmpsBtnActionPerformed

    private void pressed_addEmpBtn(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pressed_addEmpBtn
        AddNewEmployee_jFrame theANEJFrame = new AddNewEmployee_jFrame();
        theANEJFrame.setVisible(true);
        theANEJFrame.setMainHT(theHT);
    }//GEN-LAST:event_pressed_addEmpBtn

    private void saveEmpsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveEmpsBtnActionPerformed
        saveEmps();
    }//GEN-LAST:event_saveEmpsBtnActionPerformed

    private void loadEmpsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadEmpsBtnActionPerformed
        loadEmps();
    }//GEN-LAST:event_loadEmpsBtnActionPerformed

    private void removeEmpBtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_removeEmpBtnMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_removeEmpBtnMouseClicked

    private void removeEmpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEmpBtnActionPerformed
        RemoveEmployeejFrame theRemoveEmpJFrame = new RemoveEmployeejFrame();
        theRemoveEmpJFrame.setVisible(true);
        theRemoveEmpJFrame.setMainHT(theHT);
    }//GEN-LAST:event_removeEmpBtnActionPerformed

    private void getEmpInfoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getEmpInfoBtnActionPerformed
        GetEmployeeInfo_jFrame GetEmployeeInfo_jFrame = new GetEmployeeInfo_jFrame();
        GetEmployeeInfo_jFrame.setVisible(true);
        GetEmployeeInfo_jFrame.setMainHT(theHT);
    }//GEN-LAST:event_getEmpInfoBtnActionPerformed

    private void loadEmps(){
        BufferedReader br = null;
        try {
            File textfile = new File("myfile.txt");

            if (!textfile.exists()) textfile.createNewFile();
            
            br = new BufferedReader(new FileReader(textfile));
            String empNumStr;
            while((empNumStr = br.readLine()) != null){
                int empNum = Integer.parseInt(empNumStr);
                
                String firstName = br.readLine();
                String lastName = br.readLine();
                
                double deductRate = Double.parseDouble(br.readLine());
                
                if(br.readLine().equals("FTE")){
                    double salary = Double.parseDouble(br.readLine());
                    theHT.addEmployee(new FTE(empNum, firstName, lastName, 0, 0, deductRate, salary));
                }
                else{
                    double hourlyWage = Double.parseDouble(br.readLine());
                    int hoursPerWeek = Integer.parseInt(br.readLine());
                    int weeksPerYear = Integer.parseInt(br.readLine());
                    
                    theHT.addEmployee(new PTE(empNum, firstName, lastName, 0, 0, deductRate, hourlyWage, hoursPerWeek, weeksPerYear));

                }
                        
                        
            }
            
        } catch (IOException ioe) {
	   ioe.printStackTrace();
	}
	finally
	{ 
            try{
               if(br != null)
                  br.close();
            }
            catch(Exception ex){
                System.out.println("Error in closing the BufferedReader"+ex);
            }
	}
    }
    private void saveEmps(){
                BufferedWriter bw = null;
        try {
            File textfile = new File("myfile.txt");

            if (!textfile.exists()) textfile.createNewFile();
            
            bw = new BufferedWriter(new FileWriter(textfile));
            
            for(int bucketNum = 0; bucketNum < theHT.buckets.length; bucketNum++){
                for(int i = 0; i < theHT.buckets[bucketNum].size(); i++){
                    EmployeeInfo theEmp = theHT.buckets[bucketNum].get(i);
                    
                    bw.write(String.valueOf(theEmp.empNum));
                    bw.newLine();
                    
                    bw.write(theEmp.firstName);
                    bw.newLine();

                    bw.write(theEmp.lastName);
                    bw.newLine();
                    
                    bw.write(String.valueOf(theEmp.deductRate));
                    bw.newLine();
                    
                    if(theEmp instanceof FTE){
                        FTE theFTE = (FTE)theEmp; 
                        
                        bw.write("FTE");
                        bw.newLine();
                        
                        bw.write(String.valueOf(theFTE.yearlySalary));
                        bw.newLine();
                    }
                    else{
                        PTE thePTE = (PTE)theEmp; 
                        
                        bw.write("PTE");
                        bw.newLine();
                        
                        bw.write(String.valueOf(thePTE.hourlyWage));
                        bw.newLine();

                        bw.write(String.valueOf(thePTE.hoursPerWeek));
                        bw.newLine();
                                                
                        bw.write(String.valueOf(thePTE.weeksPerYear));
                        bw.newLine();
                    }                    
    

                }
            }
        } catch (IOException ioe) {
	   ioe.printStackTrace();
	}
	finally
	{ 
            try{
               if(bw!=null)
                  bw.close();
            }
            catch(Exception ex){
                System.out.println("Error in closing the BufferedWriter"+ex);
            }
	}
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if (G_LOOK_AND_FEEL.equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main_jFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main_jFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addEmpBtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton displayEmpsBtn;
    private javax.swing.JButton editEmpBtn;
    private javax.swing.JButton getEmpInfoBtn;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JButton loadEmpsBtn;
    private javax.swing.JButton removeEmpBtn;
    private javax.swing.JButton saveEmpsBtn;
    // End of variables declaration//GEN-END:variables
}
